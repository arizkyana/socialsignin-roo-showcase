<div xmlns:spring="http://www.springframework.org/tags" xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
  <jsp:directive.page contentType="text/html;charset=UTF-8" />
  <jsp:output omit-xml-declaration="yes" />
  <spring:message var="app_name" code="application_name" htmlEscape="false" />
  <spring:message var="title" code="welcome_titlepane" arguments="${app_name}" htmlEscape="false" />
  <util:panel id="title" title="${title}">
    <h3>
      <spring:message code="welcome_h3" arguments="${app_name}" />
    </h3>
    <p>
      <spring:message code="welcome_text" />
    </p>
    <p>3 main use-cases of SocialSignin are showcased</p>
    <ol>
    <li>Using 3rd Party APIs for unauthenticated calls, such as searching public Twitter timeline</li>
    <li>Using 3rd Party APIs on behalf of currently authenticated user of the application, for example, sending Tweets on behalf of the user or accessing user's own Twitter timeline</li>
    <li>Using 3rd Party APIs on behalf of a different user, such as using the application's admin account to send an announcement Tweet to the application's followers</li>
    </ol>
    <p>Use of certain functions (such as searching public Twitter timeline) does not require a user to login to the application</p>
    <p>Use of members-only functionality is protected by <a target="_blank" href="https://github.com/socialsignin/spring-social-security>spring-social-security">spring-social-security</a> and the user
    will be prompted to login to a local account using any of the registered providers for authentication.</p><p>  If the user chooses to create their account with provider A (eg. Facebook) and subsequently wishes to use functionality of provider B (eg. Twitter), they will be asked to "connect" their account with provider B when they try to use provider B functionality, and their local account will then be associated with both providers. The next time the user logs in they can use any provider associated with their account to authenticate</p>  
    <p>NB: Sending a Tweet on behalf of the application first requires that a local account with the username "testAdminUser" be created (by logging in with the Twitter account of your application for example, and choosing the username "testAdminUser").  Another user will then be able to log in with a different Twitter account and use the "Announce my use of SocialSignin Showcase" functionality)</p>
    <p>To get started, <a target="_blank" href="https://dev.twitter.com/apps">register a Twitter application</a> and add your Consumer key and Consumer secret to socialsignin.properties</p>
   
    <a href="showcase"><h3>Start Showcase</h3></a>
    
  </util:panel>
</div>